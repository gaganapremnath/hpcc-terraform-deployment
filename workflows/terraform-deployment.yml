name: CI Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - terraform-github-actions
 
permissions:
  contents: read
  id-token: write

jobs:
  cluster_deployment:
    runs-on: self-hosted
    environment: development
    
    steps:
      - name: GitHub login
        run: gh auth login -p ssh --with-token <<< "${{ secrets.GH_TOKEN }}"

      - name: Checkout opinionated-terraform-azurerm-hpcc 
        uses: actions/checkout@v3
        with:
          repository: 'gfortil/opinionated-terraform-azurerm-hpcc'
          token: ${{ secrets.GH_TOKEN }}

      - uses: actions/setup-node@v2
        with:
          node-version: 20
        
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
      
      - name: Install Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.30.2' # default is latest stable #azure aks 

      - name: Azure login
        run: |
          az login --service-principal -u ${{ secrets.AAD_CLIENT_ID }} -p ${{ secrets.AAD_CLIENT_SECRET }} --tenant ${{ secrets.AAD_TENANT_ID }}
          az account set --subscription ${{ secrets.AAD_SUBSCRIPTION_ID }}

      - name: Install kubelogin
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.1.3'
          skip-cache: 'true'

      - name: Get Runner Public IP
        id: public_ip
        uses: haythem/public-ip@v1.3

        # - name: Create Deployment Containers
        #   uses: gfortil/opinionated-terraform-azurerm-hpcc/.github/actions/pre-tf-deployment@terraform-github-actions
        #   with:
        #     DPL_SA_NAME: "deploymentsa${{ vars.ID }}"
        #     DPL_STORAGE_RG_NAME: "app-terraform-github-action-${{ vars.ID }}"
        #     VNET_DPL_CTNR_NAME: ${{ vars.VNET_DPL_CTNR_NAME }}
        #     STORAGE_DPL_CTNR_NAME: ${{ vars.STORAGE_DPL_CTNR_NAME }}
        #     AKS_DPL_CTNR_NAME: ${{ vars.AKS_DPL_CTNR_NAME }}
        #     HPCC_DPL_CTNR_NAME: ${{ vars.HPCC_DPL_CTNR_NAME }}
        #     DPL_SA_LOCATION: ${{ vars.DPL_SA_LOCATION }}
        #     TAGS: ${{ vars.TAGS }}
        #     PUBLIC_IP: ${{ steps.public_ip.outputs.ipv4 }}

  # Deploy_virtual_network:
  #   runs-on: self-hosted
  #   needs: Create_DPL_CTNRS
  #   steps:
      - name: Deploy Virtual Network
        uses: gfortil/opinionated-terraform-azurerm-hpcc/.github/actions/deploy-vnet@terraform-github-actions
        with:
          ARM_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AAD_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
          RBAC_ENABLED: ${{ vars.RBAC_ENABLED }}  
          DPL_SA_NAME: ${{ vars.DPL_SA_NAME }}
          DPL_STORAGE_RG_NAME: ${{ vars.DPL_STORAGE_RG_NAME }}
          STATE_BLOB_NAME: ${{ vars.STATE_BLOB_NAME }}
          VNET_DPL_CTNR_NAME: ${{ vars.VNET_DPL_CTNR_NAME }}
          DPL_BLOB_NAME: ${{ vars.DPL_BLOB_NAME }}
          VNET_DPL_CTNR_SAS: ${{ secrets.VNET_DPL_CTNR_SAS }}

  # Deploy_external_storage:
  #   runs-on: self-hosted
  #   needs: Deploy_virtual_network
  #   steps:
      - name: Deploy External Storage Account for HPCC
        uses: gfortil/opinionated-terraform-azurerm-hpcc/.github/actions/deploy-storage@terraform-github-actions
        with:
          ARM_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AAD_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
          RBAC_ENABLED: ${{ vars.RBAC_ENABLED }}  
          DPL_SA_NAME: ${{ vars.DPL_SA_NAME }}
          DPL_STORAGE_RG_NAME: ${{ vars.DPL_STORAGE_RG_NAME }}
          STATE_BLOB_NAME: ${{ vars.STATE_BLOB_NAME }}
          STORAGE_DPL_CTNR_NAME: ${{ vars.STORAGE_DPL_CTNR_NAME }}
          DPL_BLOB_NAME: ${{ vars.DPL_BLOB_NAME }}
          VNET_DPL_CTNR_SAS: ${{ secrets.VNET_DPL_CTNR_SAS }}
          VNET_DPL_CTNR_NAME: ${{ vars.VNET_DPL_CTNR_NAME }}
          STORAGE_DPL_CTNR_SAS: ${{ secrets.STORAGE_DPL_CTNR_SAS }}
      
  # Deploy_aks:
  #   runs-on: self-hosted
  #   needs: Deploy_external_storage
  #   steps:
      - name: Deploy AKS Module
        uses: gfortil/opinionated-terraform-azurerm-hpcc/.github/actions/deploy-aks@terraform-github-actions
        with:
          ARM_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AAD_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
          RBAC_ENABLED: ${{ vars.RBAC_ENABLED }}
          DPL_SA_NAME: ${{ vars.DPL_SA_NAME }}
          DPL_STORAGE_RG_NAME: ${{ vars.DPL_STORAGE_RG_NAME }}
          STATE_BLOB_NAME: ${{ vars.STATE_BLOB_NAME }}
          STORAGE_DPL_CTNR_NAME: ${{ vars.STORAGE_DPL_CTNR_NAME }}
          DPL_BLOB_NAME: ${{ vars.DPL_BLOB_NAME }}
          VNET_DPL_CTNR_SAS: ${{ secrets.VNET_DPL_CTNR_SAS }}
          VNET_DPL_CTNR_NAME: ${{ vars.VNET_DPL_CTNR_NAME }}
          STORAGE_DPL_CTNR_SAS: ${{ secrets.STORAGE_DPL_CTNR_SAS }}
          AKS_DPL_CTNR_SAS: ${{ secrets.AKS_DPL_CTNR_SAS }}
          AKS_DPL_CTNR_NAME: ${{ vars.AKS_DPL_CTNR_NAME }}

  # Deploy_HPCC:
  #   runs-on: self-hosted
  #   needs: Deploy_aks
  #   steps:
      - name: Deploy HPCC
        uses:  gfortil/opinionated-terraform-azurerm-hpcc/.github/actions/deploy-hpcc@terraform-github-actions
        with:
          ARM_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AAD_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
          RBAC_ENABLED: ${{ vars.RBAC_ENABLED }}
          DPL_SA_NAME: ${{ vars.DPL_SA_NAME }}
          DPL_STORAGE_RG_NAME: ${{ vars.DPL_STORAGE_RG_NAME }}
          STATE_BLOB_NAME: ${{ vars.STATE_BLOB_NAME }}
          DPL_BLOB_NAME: ${{ vars.DPL_BLOB_NAME }}
          VNET_DPL_CTNR_NAME: ${{ vars.VNET_DPL_CTNR_NAME }}
          VNET_DPL_CTNR_SAS: ${{ secrets.VNET_DPL_CTNR_SAS }}
          STORAGE_DPL_CTNR_NAME: ${{ vars.STORAGE_DPL_CTNR_NAME }}
          STORAGE_DPL_CTNR_SAS: ${{ secrets.STORAGE_DPL_CTNR_SAS }}
          AKS_DPL_CTNR_NAME: ${{ vars.AKS_DPL_CTNR_NAME }}
          AKS_DPL_CTNR_SAS: ${{ secrets.AKS_DPL_CTNR_SAS }}
          HPCC_DPL_CTNR_NAME: ${{ vars.HPCC_DPL_CTNR_NAME }}
          HPCC_DPL_CTNR_SAS: ${{ secrets.HPCC_DPL_CTNR_SAS }}
          



  #||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
  # Deploy_sa_for_data_files:
  #   runs-on: ubuntu-latest
  #   needs: Environment-setup
  #   steps:
  #     - name: Deploy Storage Account for Data files
  #       uses: gfortil/opinionated-terraform-azurerm-hpcc/.github/actions/deploy-data-storage@terraform-github-actions
  #       with:
  #         ARM_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
  #         ARM_CLIENT_SECRET: ${{ secrets.AAD_SECRET }}
  #         ARM_SUBSCRIPTION_ID: ${{ secrets.AAD_SUBSCRIPTION_ID }}
  #         ARM_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
  #         DEPLOYMENT_SA_NAME: ${{vars.DEPLOYMENT_SA_NAME}}
  #         DEPLOYMENT_CONTAINER_NAME: ${{vars.DEPLOYMENT_CONTAINER_NAME}}


  # Deploy_virtual_network:
  #   runs-on: ubuntu-latest
  #   needs: Environment-setup
  #   steps:
  #     - name: Deploy Virtual Network
  #       uses: gfortil/opinionated-terraform-azurerm-hpcc/.github/actions/deploy-vnet@terraform-github-actions
  #       with:
  #         ARM_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
  #         ARM_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}
  #         ARM_SUBSCRIPTION_ID: ${{ secrets.AAD_SUBSCRIPTION_ID }}
  #         ARM_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
  #         RBAC_ENABLED: ${{ vars.RBAC_ENABLED }}  
  #         DPL_SA_NAME: ${{ vars.DPL_SA_NAME }}
  #         DPL_STORAGE_RG_NAME: ${{ vars.DPL_STORAGE_RG_NAME }}
  #         STATE_BLOB_NAME: ${{ vars.STATE_BLOB_NAME }}
  #         VNET_DPL_CTNR_NAME: ${{ vars.VNET_DPL_CTNR_NAME }}
  #         DPL_BLOB_NAME: ${{ vars.DPL_BLOB_NAME }}
  #         VNET_DPL_CTNR_SAS: ${{ secrets.VNET_DPL_CTNR_SAS }}

  # Deploy_external_storage:
  #   runs-on: ubuntu-latest
  #   needs: Deploy_virtual_network
  #   steps:
  #     - name: Deploy External Storage Account for HPCC
  #       uses: gfortil/opinionated-terraform-azurerm-hpcc/.github/actions/deploy-storage@terraform-github-actions
  #       with:
  #         ARM_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
  #         ARM_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}
  #         ARM_SUBSCRIPTION_ID: ${{ secrets.AAD_SUBSCRIPTION_ID }}
  #         ARM_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
  #         RBAC_ENABLED: ${{ vars.RBAC_ENABLED }}  
  #         DPL_SA_NAME: ${{ vars.DPL_SA_NAME }}
  #         DPL_STORAGE_RG_NAME: ${{ vars.DPL_STORAGE_RG_NAME }}
  #         STATE_BLOB_NAME: ${{ vars.STATE_BLOB_NAME }}
  #         STORAGE_DPL_CTNR_NAME: ${{ vars.STORAGE_DPL_CTNR_NAME }}
  #         DPL_BLOB_NAME: ${{ vars.DPL_BLOB_NAME }}
  #         VNET_DPL_CTNR_SAS: ${{ secrets.VNET_DPL_CTNR_SAS }}
  #         VNET_DPL_CTNR_NAME: ${{ vars.VNET_DPL_CTNR_NAME }}
  #         STORAGE_DPL_CTNR_SAS: ${{ secrets.STORAGE_DPL_CTNR_SAS }}


  # Deploy_aks:
  #   runs-on: ubuntu-latest
  #   needs: Deploy_virtual_network
  #   steps:
  #     - name: Deploy AKS Network
  #       uses: gfortil/opinionated-terraform-azurerm-hpcc/.github/actions/deploy-aks@terraform-github-actions
  #       with:
  #         ARM_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
  #         ARM_CLIENT_SECRET: ${{ secrets.AAD_SECRET }}
  #         ARM_SUBSCRIPTION_ID: ${{ secrets.AAD_SUBSCRIPTION_ID }}
  #         ARM_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
  #         RBAC_ENABLED: ${{ secrets.RBAC_ENABLED }}
  #         DEPLOYMENT_SA_NAME: ${{vars.DEPLOYMENT_SA_NAME}}
  #         DEPLOYMENT_CONTAINER_NAME: ${{vars.DEPLOYMENT_CONTAINER_NAME}}

#optional - internal -> deployed with hpcc, coupled together. external - deploy storage and then deploy hpcc
#manual trigger: pass param 1. external / internal.
#on merges - internal
#once login - create 2 storage account -> 1. state files 2.data files after each deployment -> have folder structure for each module and its data files.
#download the data files to existing modules.
#option2:
#if download doesnt work - provide address of th edata file on storage account - involves some modifications in the repo to accept the address.

#have state files and update the cluster already present rather than create new ones.
#separate workflow file and call in main file. -- have storage account to have terraform state files - implementation before the modules. 
#after each deployment module - you will ave data.tf file. -- need to store this data.tf in the storage account.
  # deploy_hpcc:
  #   needs: deploy_aks
  #   uses:  gfortil/opinionated-terraform-azurerm-hpcc/.github/actions/deploy-hpcc@terraform-github-actions
  #   with:
  #     ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  #     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  #     ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID  
        # DEPLOYMENT_SA_NAME: ${{vars.DEPLOYMENT_SA_NAME}}
        # DEPLOYMENT_CONTAINER_NAME: ${{vars.DEPLOYMENT_CONTAINER_NAME}}
      
#create main.tf on the root directory

      
